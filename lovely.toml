[manifest]
version = "1.0.0"
dump_lua = true
priority = 0

[[patches]]
[patches.pattern]
target = "functions/state_events.lua"
pattern = "local cards_destroyed = {}"
position = "after"
payload = '''
local has_blackhole_card = false
local first_blackhole = 0

for i = 1, #scoring_hand do
    if SMODS.has_enhancement(scoring_hand[i],'m_rendom_blackhole') and not scoring_hand[i].debuff then
        if not has_blackhole_card then
            first_blackhole = i
        end
        has_blackhole_card = true
    end
end

for i=1, #scoring_hand do
    if has_blackhole_card and i ~= first_blackhole then
        cards_destroyed[#cards_destroyed+1] = scoring_hand[i]
        scoring_hand[i].destroyed = true
    end
end
'''
match_indent = true
overwrite = false


[[patches]]
[patches.pattern]
target = "functions/button_callbacks.lua"
pattern = "not (card.ability.set == 'Joker' and #G.jokers.cards < G.jokers.config.card_limit + ((card.edition and card.edition.negative) and 1 or 0)) and"
position = "at"
payload = '''
not (card.ability.set == 'Joker' and #G.jokers.cards < G.jokers.config.card_limit + ((card.edition and card.edition.negative) and 1 or 0) - ((card.edition and card.edition.rendom_big) and 1 or 0)) and
'''
match_indent = true

[[patches]]
[patches.pattern]
target = "functions/button_callbacks.lua"
pattern = "not (card.ability.consumeable and #G.consumeables.cards < G.consumeables.config.card_limit + ((card.edition and card.edition.negative) and 1 or 0)) then"
position = "at"
payload = '''
not (card.ability.consumeable and #G.consumeables.cards < G.consumeables.config.card_limit + ((card.edition and card.edition.negative) and 1 or 0) - ((card.edition and card.edition.rendom_big) and 1 or 0)) then
'''
match_indent = true